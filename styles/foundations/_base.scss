@charset "UTF-8";

@use 'foundations/_variables';
@use 'foundations/_mixins';

@import url('https://fonts.googleapis.com/css2?family=Noto+Sans+JP:wght@100&display=swap');

html {
  box-sizing: border-box;
}

*,
*:before,
*:after {
  box-sizing: border-box;
}

// https://github.com/necolas/normalize.css/issues/665
body {
  font-family: Noto Sans JP, -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Oxygen, Ubuntu,
    Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;
  line-height: 1.6;
  font-size: variables.$fontSizeBase;
  background-color: variables.$colorBg;
  color: variables.$colorText;
}

a {
  color: variables.$colorLink;
  text-decoration: none;

  &:visited {
    color: variables.$colorLinkVisited;
  }

  &:hover {
    color: variables.$colorLinkHover;
  }

  &:active {
    color: variables.$colorLinkActive;
  }

}

img {
  max-width: 100%;
  display: block;
}

p {
  margin: 1rem 0;
}

// headings
h1, h2, h3, h4, h5, h6 {
  line-height: 1.5;
  font-weight: bold;
  letter-spacing: -0.05rem;
  margin: 0;
  padding: 1rem 0;
}

h1 {
  font-size: map-get(variables.$fontSizes, 2xl);
}

h2 {
  font-size: map-get(variables.$fontSizes, xl);
}

h3 {
  font-size: map-get(variables.$fontSizes, lg);
}

h4 {
  font-size: map-get(variables.$fontSizes, md);
}

h5 {
  font-size: map-get(variables.$fontSizes, sm);
}

h6 {
  font-size: map-get(variables.$fontSizes, xs);
}

/*
 * list
 */
ul {
  padding-left: 1.5rem;
  list-style: disc;

  & ul {
    list-style: circle;

    & ul {
      list-style: square;
    }
  }
}

ol {
  counter-reset: section;
  list-style-type: none;

  & > li::before {
    counter-increment: section;
    content: counters(section, ".") ". ";
  }

  ol {
    padding-left: 1rem;
  }

  ul {
    padding-left: 2.5rem;
    list-style: circle;
  }
}

/*
 * table
 */
table {
  display: block;
  overflow-x: scroll;
  white-space: nowrap;
  -webkit-overflow-scrolling: touch;
  border-collapse: collapse;
  margin: 1rem 0;

  thead {
    th {
      padding: .5rem;
      border-bottom: 0.2rem variables.$colorText double;
      background-color: rgba(lighten(variables.$colorBg, 50%), 0.1);
    }
  }

  tbody {
    tr {
      td {
        padding: .5rem;
      }

      &:nth-of-type(even) td {
        background-color: rgba(lighten(variables.$colorBg, 50%), 0.1);
      }
    }
  }
}

/*
 * code
 */
code:not(.hljs) {
  background-color: variables.$colorInlineCodeBg;
  padding: 0 0.5rem;
}

/*
 * blockquote
 */
blockquote {
  border-left: thin darken(variables.$colorBorder, 10%) solid;
  padding: 1rem;
  background-color: rgba(lighten(variables.$colorBg, 50%), 0.1);
  color: darken(variables.$colorText, 10%);
  font-size: 90%;
  font-style: italic;
}
